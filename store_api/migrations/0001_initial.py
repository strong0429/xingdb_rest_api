# Generated by Django 3.0.3 on 2020-02-18 04:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='XingUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.CharField(max_length=12, unique=True, verbose_name='手机号码')),
                ('id_card', models.CharField(blank=True, max_length=18, null=True, unique=True, verbose_name='身份证')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'xing_user',
                'ordering': ['last_login'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PayMode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.CharField(max_length=45, verbose_name='付费模式')),
                ('amount', models.FloatField(verbose_name='付费金额')),
            ],
            options={
                'db_table': 'xing_pay_mode',
            },
        ),
        migrations.CreateModel(
            name='StoreCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True, verbose_name='类别名称')),
            ],
            options={
                'db_table': 'xing_store_category',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True, verbose_name='店铺名称')),
                ('reg_date', models.DateTimeField(auto_now_add=True, verbose_name='注册日期')),
                ('addr_province', models.CharField(blank=True, max_length=16, null=True, verbose_name='省')),
                ('addr_city', models.CharField(blank=True, max_length=16, null=True, verbose_name='市/县')),
                ('addr_district', models.CharField(blank=True, max_length=16, null=True, verbose_name='区/镇')),
                ('addr_street', models.CharField(blank=True, max_length=16, null=True, verbose_name='街道/村')),
                ('addr_detail', models.CharField(blank=True, max_length=45, null=True, verbose_name='具体')),
                ('phone', models.CharField(blank=True, max_length=12, null=True, verbose_name='联系电话')),
                ('photo_name', models.CharField(blank=True, max_length=45, null=True, verbose_name='图片名称')),
                ('category', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='stores', to='store_api.StoreCategory')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stores', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'xing_store',
                'ordering': ['addr_province', 'addr_city', 'reg_date'],
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(choices=[('CL', '店员'), ('MA', '经理')], default='CL', max_length=16)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='入职日期')),
                ('is_active', models.BooleanField(default=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staffs', to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staffs', to='store_api.Store')),
            ],
        ),
        migrations.CreateModel(
            name='PayRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_date', models.DateTimeField(auto_now_add=True, verbose_name='付费日期')),
                ('pay_amount', models.FloatField(default=0.0, verbose_name='付费金额')),
                ('pay_mode', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='store_api.PayMode')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store_api.Store')),
            ],
            options={
                'db_table': 'xing_pay_list',
                'ordering': ['store_id', 'pay_date'],
            },
        ),
    ]
